# Copyright (c) 2020 Armedia, LLC
---
AWSTemplateFormatVersion: 2010-09-09

Description: >
  Deploy ArkCase

Parameters:
  Env:
    Type: String
    Description: Type of environment to provision
    Default: prod
    AllowedValues: [staging, prod, dev, test, load-test]

  Project:
    Type: String
    Description: Name of the project (or product)
    Default: arkcase
    MinLength: 1
    MaxLength: 50
    AllowedPattern: ^[-a-zA-Z0-9_.]*$

  VpcCidr:
    Type: String
    Description: CIDR block for the VPC
    MinLength: 9
    MaxLength: 18
    AllowedPattern: ^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}/\d{1,2}$
    ConstraintDescription: Must be a valid CIDR range like "10.10.0.0/16"
    Default: 10.210.0.0/16

  DsEdition:
    Type: String
    Description: Whether Directory Services is Enterprise or Standard
    Default: Standard
    AllowedValues: [Enterprise, Standard]

  DsName:
    Type: String
    Description: |
      The fully qualified domain name for the AWS Managed Microsoft AD directory, such as
      corp.example.com. This name will resolve inside your VPC only. It does not need to be 
      publicly resolvable. 
    AllowedPattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
    ConstraintDescription: Must be a valid fully qualified domain name.
    Default: ecmontap.com

  DsPassword:
    Type: String
    Description: |
      The password for the default administrative user named Admin. 
    MinLength: 12
    MaxLength: 64
    AllowedPattern: (?=^.{12,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
    ConstraintDescription: 12-64 characters; must have digits, lower case characters, upper case characters, and special characters.



Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: { default: Definition }
        Parameters:
          - Env
          - Project

      - Label: { default: Network configuration }
        Parameters:
          - VpcCidr

      - Label: { default: Directory Services Configuration }
        Parameters:
          - DsEdition
          - DsName
          - DsPassword

    ParameterLabels:
      Env: { default: Environment }
      VpcCidr: { default: VPC CIDR block }
      DsEdition: { default: Directory Services Edition }
      DsName: { default: Domain Name }
      DsPassword: { default: Admin User Password }

Resources:

  #######
  # VPC #
  #######

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub vpc-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation


  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 0, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub public-subnet-A-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 1, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub public-subnet-B-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 2, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub private-subnet-A-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 3, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub private-subnet-B-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  ElasticIpForNatGatewayA:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIpForNatGatewayA.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  ElasticIpForNatGatewayB:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIpForNatGatewayB.AllocationId
      SubnetId: !Ref PublicSubnetB
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: PublicRouteTable
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  DefaultPrivateRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA

  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: PrivateRouteTable
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  DefaultPrivateRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTableB

  DirectoryService:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties: 
      Name: !Ref DsName
      Password: !Ref DsPassword
      Edition: !Ref DsEdition
      VpcSettings: 
        SubnetIds: 
          - !Ref PrivateSubnetA 
          - !Ref PrivateSubnetB
        VpcId: !Ref Vpc
      # AWS::DirectoryService::MicrosoftAD doesn't support Tags :-(

