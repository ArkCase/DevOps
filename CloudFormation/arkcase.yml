# Copyright (c) 2020 Armedia, LLC
---
AWSTemplateFormatVersion: 2010-09-09

Description: >
  Deploy ArkCase

Parameters:
  Env:
    Type: String
    Description: Type of environment to provision
    Default: prod
    AllowedValues: [staging, prod, dev, test, load-test]

  Project:
    Type: String
    Description: Name of the project (or product)
    Default: arkcase
    MinLength: 1
    MaxLength: 50
    AllowedPattern: ^[-a-zA-Z0-9_.]*$

  VpcCidr:
    Type: String
    Description: CIDR block for the VPC
    MinLength: 9
    MaxLength: 18
    AllowedPattern: ^\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}/\d{1,2}$
    ConstraintDescription: Must be a valid CIDR range like "10.10.0.0/16"
    Default: 10.210.0.0/16

  MaintenanceWindowStart:
    Type: String
    Description: >
      Weekly maintenance window for the whole deployment. Must be in the
      format "DDD:HH:MM" and must be in UTC time. "DDD" is the three-letter day
      of the week (eg: "Sun"); "HH" is the hour in 24h format; "MM" is the
      minutes. We strongly recommend you use Sunday early morning in your own
      time zone. The maintenance would typically take a couple of hours.
    Default: "Sun:08:00"
    AllowedPattern: "^[a-zA-Z]{3}:[0-2][0-9]:[0-5][0-9]$"
    ConstraintDescription: Must be in the format "DDD:HH:MM"

  DsEdition:
    Type: String
    Description: Whether Directory Services is Enterprise or Standard
    Default: Standard
    AllowedValues: [Enterprise, Standard]

  DsName:
    Type: String
    Description: |
      The fully qualified domain name for the AWS Managed Microsoft AD directory, such as
      corp.example.com. This name will resolve inside your VPC only. It does not need to be 
      publicly resolvable. 
    AllowedPattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
    ConstraintDescription: Must be a valid fully qualified domain name.
    Default: ecmontap.com

  DsPassword:
    Type: String
    Description: |
      The password for the default administrative user named Admin. The
      password must be between 12 and 64 characters, not contain the
      word "admin", and must have at least one character from three of these
      four categories: lowercase, uppercase, numeric and special characters
    NoEcho: true
    MinLength: 12
    MaxLength: 64
    AllowedPattern: (?=^.{12,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
    ConstraintDescription: "12-64 characters; must have at least one character from three of these four categories: lowercase, uppercase, numeric and special characters"

  RdsPasswordLength:
    Type: Number
    Description: How long database passwords should be
    Default: 20
    MinValue: 8
    MaxValue: 80

  RdsPasswordRotationInDays:
    Type: Number
    Description: How often to rotate database passwords, in days
    Default: 30
    MinValue: 1
    MaxValue: 1000

  AlfrescoRdsInstanceClass:
    Type: String
    Description: >
      RDS instance class for the Alfresco database; for more detail, refer to
      the official AWS documentation here:
      https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html
    MinLength: 1
    MaxLength: 20
    Default: db.t3.small

  AlfrescoRdsDiskSizeGB:
    Type: Number
    MinValue: 20
    Default: 50

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: { default: IMPORTANT PARAMETERS }
        Parameters:
          - Env
          - VpcCidr
          - MaintenanceWindowStart

      - Label: { default: "Definition (this and the following sections are less important)" }
        Parameters:
          - Project

      - Label: { default: General database configuration }
        Parameters:
          - RdsPasswordLength
          - RdsPasswordRotationInDays

      - Label: { default: Alfresco configuration }
        Parameters:
          - AlfrescoRdsInstanceClass
          - AlfrescoRdsDiskSizeGB

      - Label: { default: Directory Services Configuration }
        Parameters:
          - DsEdition
          - DsName
          - DsPassword

    ParameterLabels:
      Env: { default: Environment }
      VpcCidr: { default: VPC CIDR block }
      MaintenanceWindowStart: { default: Start of weekly maintenance window }
      DsEdition: { default: Directory Services Edition }
      DsName: { default: Domain Name }
      DsPassword: { default: Admin User Password }
      RdsPasswordLength: { default: RDS password length }
      RdsPasswordRotationInDays: { default: "RDS password rotation, in days" }
      AlfrescoRdsInstanceClass: { default: Alfresco RDS instance class }
      AlfrescoRdsDiskSizeGB: { default: "Alfresco RDS disk size, in GB" }

Resources:

  #######
  # VPC #
  #######

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub vpc-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation


  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 0, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub public-subnet-A-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 1, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub public-subnet-B-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 2, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub private-subnet-A-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Select [ 3, !Cidr [ !Ref VpcCidr, 4, 10 ] ]
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: !Sub private-subnet-B-${Project}-${Env}
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  ElasticIpForNatGatewayA:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIpForNatGatewayA.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  ElasticIpForNatGatewayB:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIpForNatGatewayB.AllocationId
      SubnetId: !Ref PublicSubnetB
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: PublicRouteTable
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  DefaultPrivateRouteA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA

  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: PrivateRouteTable
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: network
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  DefaultPrivateRouteB:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTableB

  ###############################
  # Compute Maintenance Windows #
  ###############################

  MaintenanceWindowsLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: admin
        - Key: Component
          Value: iam
        - Key: ManagedBy
          Value: CloudFormation

  MaintenanceWindowsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Calculate ArkCase maintenance windows
      Runtime: python3.7
      Role: !GetAtt MaintenanceWindowsLambdaExecutionRole.Arn
      Handler: maintenance_windows_lambda.handler
      Timeout: 5
      Code:
        S3Bucket: !Sub arkcase-public-${AWS::Region}
        S3Key: DevOps/20200421-1916/maintenance_windows_lambda/maintenance_windows_lambda.zip
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: admin
        - Key: Component
          Value: lambda
        - Key: ManagedBy
          Value: CloudFormation

  MaintenanceWindows:
    Type: Custom::MaintenanceWindows
    Properties:
      ServiceToken: !GetAtt MaintenanceWindowsLambda.Arn
      Start: !Ref MaintenanceWindowStart

  ######################################
  # Microsoft Active Directory Service #
  ######################################

  DirectoryService:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties:
      Name: !Ref DsName
      Password: !Ref DsPassword
      Edition: !Ref DsEdition
      VpcSettings:
        SubnetIds:
          - !Ref PrivateSubnetA
          - !Ref PrivateSubnetB
        VpcId: !Ref Vpc
      # AWS::DirectoryService::MicrosoftAD doesn't support Tags :-(

  ############
  # Alfresco #
  ############

  AlfrescoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Alfresco containers
      VpcId: !Ref Vpc
      #SecurityGroupIngress:
      #  - Description: Allow traffic from ArkCase containers
      #    IpProtocol: tcp
      #    FromPort: 443
      #    ToPort: 443
      #    SourceSecurityGroupId: !GetAtt ArkcaseSecurityGroup.GroupId
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: alfresco
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  AlfrescoDatabase:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://arkcase-public-us-east-1.s3.amazonaws.com/DevOps/20200421-1916/CloudFormation/mariadb.yml
      TimeoutInMinutes: 30
      Parameters:
        Env: !Ref Env
        Project: !Ref Project
        VpcId: !Ref Vpc
        # NB: We can't use lists when creating a nested stack, we have to
        #     expand it into a comma-separated list.
        SubnetIds: !Join [ ",", [ !Ref PrivateSubnetA, !Ref PrivateSubnetB ] ]
        AllowedSecurityGroupId: !GetAtt AlfrescoSecurityGroup.GroupId
        DatabaseName: alfresco
        InstanceClass: !Ref AlfrescoRdsInstanceClass
        DiskSizeGB: !Ref AlfrescoRdsDiskSizeGB
        EnableMultiAZ: true
        BackupWindow: !Sub ${MaintenanceWindows.StartRdsBackup}-${MaintenanceWindows.EndRdsBackup}
        MaintenanceWindow: !Sub ${MaintenanceWindows.StartAlfrescoRdsMaintenance}-${MaintenanceWindows.EndAlfrescoRdsMaintenance}
        AutoMinorUpgrade: true
        PasswordLength: !Ref RdsPasswordLength
        RotationInDays: !Ref RdsPasswordRotationInDays
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: alfresco
        - Key: Component
          Value: cfn
        - Key: ManagedBy
          Value: CloudFormation

Outputs:
  StartBlockTraffic:
    Description: Begin weekly maintenance window
    Value: !GetAtt MaintenanceWindows.StartBlockTraffic
  StartRdsBackup:
    Description: When to start backing up RDS instances
    Value: !GetAtt MaintenanceWindows.StartRdsBackup
  EndRdsBackup:
    Description: When to end backing up RDS instances
    Value: !GetAtt MaintenanceWindows.EndRdsBackup
  StartAlfrescoRdsMaintenance:
    Description: When to start maintenance of the Alfresco RDS instance
    Value: !GetAtt MaintenanceWindows.StartAlfrescoRdsMaintenance
  EndAlfrescoRdsMaintenance:
    Description: When to end maintenance of the Alfresco RDS instance
    Value: !GetAtt MaintenanceWindows.EndAlfrescoRdsMaintenance
  StartAmazonmqMaintenanceDayOfWeek:
    Description: When to start maintenance of AmazonMQ (day of week)
    Value: !GetAtt MaintenanceWindows.StartAmazonmqMaintenanceDayOfWeek
  StartAmazonmqMaintenanceTimeOfDay:
    Description: When to start maintenance of AmazonMQ (time of day)
    Value: !GetAtt MaintenanceWindows.StartAmazonmqMaintenanceTimeOfDay
  EndBlockTraffic:
    Description: End weekly maintenance window
    Value: !GetAtt MaintenanceWindows.EndBlockTraffic
