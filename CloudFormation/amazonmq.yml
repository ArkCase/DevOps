# Copyright (c) 2020 Armedia, LLC
---
AWSTemplateFormatVersion: 2010-09-09

Description: >
  Deploy an AmazonMQ broker with the help of SecretsManager to manage
  credentials and secret rotation

Parameters:
  Env:
    Type: String
    Description: Type of environment to provision
    Default: prod
    MinLength: 1
    MaxLength: 30
    AllowedPattern: ^[-_.a-zA-Z0-9]*$
    ConstraintDescription: >
      Up to 30 alpha-numeric characters; can use underscores,
      dots and dashes

  Project:
    Type: String
    Description: Name of the project (or product)
    Default: arkcase
    MinLength: 1
    MaxLength: 30
    AllowedPattern: ^[-_.a-zA-Z0-9]*$
    ConstraintDescription: >
      Up to 30 alpha-numeric characters; can use underscores,
      dots and dashes

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC where the AmazonMQ broker will live

  SubnetIdA:
    Type: AWS::EC2::Subnet::Id
    Description: >
      ID of the first subnet where the AmazonMQ broker and its hot standby will
      live

  SubnetIdB:
    Type: AWS::EC2::Subnet::Id
    Description: >
      ID of the second subnet where the AmazonMQ broker and its hot standby
      will live

  InstanceType:
    Type: String
    Description: The instance type to use for the AmazonMQ broker
    Default: mq.m5.large
    AllowedValues:
      - mq.t2.micro
      - mq.m5.large
      - mq.m5.xlarge
      - mq.m5.2xlarge
      - mq.m5.4xlarge

  PasswordLength:
    Type: Number
    Description: How long passwords should be
    Default: 20
    MinValue: 15
    MaxValue: 80

  MasterSecretRotationCron:
    Type: String
    Description: >
      Cron specification of when to trigger a rotation of the master secret.
      This must be specified using the AWS cron format and in UTC only.
    Default: 0 8 ? * SUN *
    MinLength: 11

  UserSecretRotationCron:
    Type: String
    Description: >
      Cron specification of when to trigger a rotation of the user secret.
      This must be specified using the AWS cron format and in UTC only.
    Default: 5 8 ? * SUN *
    MinLength: 11

  ActivemqVersion:
    Type: String
    Description: ActiveMQ version to use
    Default: 5.15.10
    AllowedValues: [ 5.15.10, 5.15.9, 5.15.8, 5.15.6, 5.15.0 ]

  MaintenanceDayOfWeek:
    Type: String
    Description: >
      Day of the week when maintenance will be performed on the AmazonMQ broker
    Default: Sunday
    AllowedValues: [ Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday ]

  MaintenanceTimeOfDay:
    Type: String
    Description: >
      Time when to start the weekly maintenance on the AmazonMQ broker, in UTC
      timezone
    Default: 08:00
    AllowedPattern: ^[0-2][0-9]:[0-5][0-9]$
    ConstraintDescription: Must be in the format "HH:MM"

  EnableAuditLogs:
    Type: String
    Description: >
      Whether to enable AmazonMQ audit logs
    Default: false
    AllowedValues: [ true, false ]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: { default: Definition }
        Parameters:
          - Env
          - Project

      - Label: { default: Network configuration }
        Parameters:
          - VpcId
          - SubnetIdA
          - SubnetIdB

      - Label: { default: AmazonMQ configuration }
        Parameters:
          - InstanceType
          - PasswordLength
          - MasterSecretRotationCron
          - UserSecretRotationCron
          - ActivemqVersion
          - MaintenanceDayOfWeek
          - MaintenanceTimeOfDay
          - EnableAuditLogs

    ParameterLabels:
      Env: { default: Environment }
      VpcId: { default: VPC ID }
      SubnetIdA: { default: First subnet ID }
      SubnetIdB: { default: Second subnet ID }
      InstanceType: { default: Instance type }
      PasswordLength: { default: Password length }
      MasterSecretRotationCron: { default: Master secret rotation cron }
      UserSecretRotationCron: { default: User secret rotation cron }
      ActivemqVersion: { default: ActiveMQ version }
      MaintenanceDayOfWeek: { default: Maintenance day of the week }
      MaintenanceTimeOfDay: { default: Maintenance start time }
      EnableAuditLogs: { default: Enable audit logs }

Rules:
  SubnetsInVpc:
    Assertions:
      - AssertDescription: All subnets must be in the VPC
        Assert:
          Fn::EachMemberIn:
            - Fn::ValueOfAll: [ "AWS::EC2::Subnet::Id", VpcId ]
            - Fn::RefAll: AWS::EC2::VPC::Id

Resources:

  ###################
  # AmazonMQ broker #
  ###################

  AllowedSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group that can access the AmazonMQ broker
      VpcId: !Ref VpcId
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: amq
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  BrokerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the AmazonMQ broker
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        # TODO: close unnecessary ports
        - Description: Allow traffic from ArkCase containers for AMQP
          IpProtocol: tcp
          FromPort: 5671
          ToPort: 5671
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
        - Description: Allow traffic from ArkCase containers for MQTT
          IpProtocol: tcp
          FromPort: 8883
          ToPort: 8883
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
        - Description: Allow traffic from ArkCase containers for MQTT
          IpProtocol: tcp
          FromPort: 8883
          ToPort: 8883
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
        - Description: Allow traffic from ArkCase containers for OpenWire
          IpProtocol: tcp
          FromPort: 61617
          ToPort: 61617
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
        - Description: Allow traffic from ArkCase containers for STOMP
          IpProtocol: tcp
          # NB: Keep the STOMP port open, the SecretsManager rotation lambda
          #     needs it.
          FromPort: 61614
          ToPort: 61614
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
        - Description: Allow traffic from ArkCase containers for Websocket
          IpProtocol: tcp
          FromPort: 61619
          ToPort: 61619
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: amq
        - Key: Component
          Value: vpc
        - Key: ManagedBy
          Value: CloudFormation

  Broker:
    Type: AWS::AmazonMQ::Broker
    DependsOn: MasterSecret
    Properties:
      BrokerName: !Sub AmazonMQ-${AWS::StackName}
      DeploymentMode: ACTIVE_STANDBY_MULTI_AZ
      EncryptionOptions:
        UseAwsOwnedKey: true
      EngineType: ActiveMQ
      EngineVersion: !Ref ActivemqVersion
      HostInstanceType: !Ref InstanceType
      SecurityGroups: [ !GetAtt BrokerSecurityGroup.GroupId ]
      SubnetIds: [ !Ref SubnetIdA, !Ref SubnetIdB ]
      PubliclyAccessible: false
      Users:
        - Username: !Sub "{{resolve:secretsmanager:${MasterSecret}:SecretString:username}}"
          Password: !Sub "{{resolve:secretsmanager:${MasterSecret}:SecretString:password}}"
      MaintenanceWindowStartTime:
        DayOfWeek: !Ref MaintenanceDayOfWeek
        TimeOfDay: !Ref MaintenanceTimeOfDay
        TimeZone: UTC
      Logs:
        Audit: false
        General: true
      AutoMinorVersionUpgrade: true
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: amq
        - Key: Component
          Value: amazonmq
        - Key: ManagedBy
          Value: CloudFormation

  #################
  # Master Secret #
  #################

  MasterSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Master credentials to connect to the AmazonMQ broker
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "admin1"}'
        GenerateStringKey: password
        PasswordLength: !Ref PasswordLength
        ExcludePunctuation: true  # AmazonMQ is quite picky
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: amq
        - Key: Component
          Value: secretsmanager
        - Key: ManagedBy
          Value: CloudFormation

  MasterSecretConfig:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://arkcase-public-us-east-1.s3.amazonaws.com/DevOps/ACM-TMP-20200501-0929/CloudFormation/amqsecretcfg.yml
      TimeoutInMinutes: 5
      Parameters:
        Env: !Ref Env
        Project: !Ref Project
        PasswordLength: !Ref PasswordLength
        SecretArn: !Ref MasterSecret
        SecretRotationCron: !Ref MasterSecretRotationCron
        BrokerId: !Ref Broker
        BrokerArn: !GetAtt Broker.Arn
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: amq
        - Key: Component
          Value: cfn
        - Key: ManagedBy
          Value: CloudFormation

  ########################
  # Alfresco User Secret #
  ########################

  AlfrescoUserSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: >
        Credentials to allow Alfresco to connect to the AmazonMQ broker
      GenerateSecretString:
        # The following manages to generate some valid JSON, so the broker
        # endpoints would show up as a list in the secret JSON.
        SecretStringTemplate: !Sub
          - '{"username": "alfresco1", "AMQP endpoints": ["${AmqpEndpoints}"]}'
          - AmqpEndpoints: !Join [ '", "', !GetAtt Broker.AmqpEndpoints ]
        GenerateStringKey: password
        PasswordLength: !Ref PasswordLength
        ExcludePunctuation: true  # AmazonMQ is quite picky
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: amq
        - Key: Component
          Value: secretsmanager
        - Key: ManagedBy
          Value: CloudFormation

  AlfrescoUserSecretConfig:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://arkcase-public-us-east-1.s3.amazonaws.com/DevOps/ACM-TMP-20200501-0929/CloudFormation/amqsecretcfg.yml
      TimeoutInMinutes: 5
      Parameters:
        Env: !Ref Env
        Project: !Ref Project
        PasswordLength: !Ref PasswordLength
        SecretArn: !Ref AlfrescoUserSecret
        SecretRotationCron: !Ref UserSecretRotationCron
        BrokerId: !Ref Broker
        BrokerArn: !GetAtt Broker.Arn
      Tags:
        - Key: Env
          Value: !Ref Env
        - Key: Project
          Value: !Ref Project
        - Key: Service
          Value: amq
        - Key: Component
          Value: cfn
        - Key: ManagedBy
          Value: CloudFormation

Outputs:
  AllowedSecurityGroupId:
    Description: >
      ID of the security group allowed to connect to the AmazonMQ broker
    Value: !GetAtt AllowedSecurityGroup.GroupId

  AlfrescoUserSecretArn:
    Description: ARN of the credential secret to be used by Alfresco
    Value: !Ref AlfrescoUserSecret
